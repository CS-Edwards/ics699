"{'name': 'connect_to_local', 'api_name': 'connect_to_local', 'description': 'Connect to a local Weaviate instance deployed using Docker compose with standard port configurations.\\n\\nThis method handles automatically connecting to Weaviate but not automatically closing the connection. Once you are done with the client\\n    you should call `client.close()` to close the connection and free up resources. Alternatively, you can use the client as a context manager\\n    in a `with` statement, which will automatically close the connection when the context is exited. See the examples below for details.', 'parameters': {'required': [{'name': 'host', 'description': 'The host to use for the underlying REST and GraphQL API calls.'}, {'name': 'port', 'description': 'The port to use for the underlying REST and GraphQL API calls.'}, {'name': 'grpc_port', 'description': 'The port to use for the underlying gRPC API.'}], 'optional': [{'name': 'headers', 'description': 'Additional headers to include in the requests, e.g. API keys for Cloud vectorization.'}, {'name': 'additional_config', 'description': 'This includes many additional, rarely used config options. use wvc.init.AdditionalConfig() to configure.'}, {'name': 'skip_init_checks', 'description': 'Whether to skip the initialization checks when connecting to Weaviate.'}, {'name': 'auth_credentials', 'description': 'The credentials to use for authentication with your Weaviate instance. This can be an API key, in which case use `weaviate.classes.init.Auth.api_key()`,\\n            a bearer token, in which case use `weaviate.classes.init.Auth.bearer_token()`, a client secret, in which case use `weaviate.classes.init.Auth.client_credentials()`\\n            or a username and password, in which case use `weaviate.classes.init.Auth.client_password()`.'}]}}"