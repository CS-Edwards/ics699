"{'name': 'connect_to_wcs', 'api_name': 'connect_to_wcs', 'description': 'Connect to your own Weaviate Cloud Service (WCS) instance.\\n\\nThis method handles automatically connecting to Weaviate but not automatically closing the connection. Once you are done with the client\\nyou should call `client.close()` to close the connection and free up resources. Alternatively, you can use the client as a context manager\\nin a `with` statement, which will automatically close the connection when the context is exited. See the examples below for details.', 'parameters': {'required': [{'name': 'cluster_url', 'description': 'The WCS cluster URL or hostname to connect to. Usually in the form rAnD0mD1g1t5.something.weaviate.cloud'}, {'name': 'auth_credentials', 'description': 'The credentials to use for authentication with your Weaviate instance. This can be an API key, in which case use `weaviate.classes.init.Auth.api_key()`, a bearer token, in which case use `weaviate.classes.init.Auth.bearer_token()`, a client secret, in which case use `weaviate.classes.init.Auth.client_credentials()`\\nor a username and password, in which case use `weaviate.classes.init.Auth.client_password()`.'}]}, 'optional': [{'name': 'headers', 'description': 'Additional headers to include in the requests, e.g. API keys for third-party Cloud vectorization.'}, {'name': 'additional_config', 'description': 'This includes many additional, rarely used config options. use wvc.init.AdditionalConfig() to configure.'}, {'name': 'skip_init_checks', 'description': 'Whether to skip the initialization checks when connecting to Weaviate.'}]}}  Note: The output has been shortened for readability."