"{'name': 'DataFrame.empty', 'api_name': 'DataFrame.empty', 'description': 'Indicator whether Series/DataFrame is empty.\\nTrue if Series/DataFrame is entirely empty (no items), meaning any of the\\naxes are of length 0.\\n\\nReturns:\\n\\nboolIf Series/DataFrame is empty, return True, if not return False.\\n\\n\\n\\nSee also\\n\\nSeries.dropnaReturn series without null values.\\n\\nDataFrame.dropnaReturn DataFrame with labels on given axis omitted where (all or any) data are missing.\\n\\n\\n\\nNotes\\nIf Series/DataFrame contains only NaNs, it is still not considered empty. See\\nthe example below.\\nExamples\\nAn example of an actual empty DataFrame. Notice the index is empty:\\n>>> df_empty = pd.DataFrame({'A' : []})\\n>>> df_empty\\nEmpty DataFrame\\nColumns: [A]\\nIndex: []\\n>>> df_empty.empty\\nTrue\\n\\n\\nIf we only have NaNs in our DataFrame, it is not considered empty! We\\nwill need to drop the NaNs to make the DataFrame empty:\\n>>> df = pd.DataFrame({'A' : [np.nan]})\\n>>> df\\n    A\\n0 NaN\\n>>> df.empty\\nFalse\\n>>> df.dropna().empty\\nTrue\\n\\n\\n>>> ser_empty = pd.Series({'A' : []})\\n>>> ser_empty\\nA    []\\ndtype: object\\n>>> ser_empty.empty\\nFalse\\n>>> ser_empty = pd.Series()\\n>>> ser_empty.empty\\nTrue', 'parameters': {}}"