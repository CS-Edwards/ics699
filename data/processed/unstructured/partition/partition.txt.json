"{'name': 'partition',  'api_name': 'partition',  'description': 'Partitions a document into its constituent elements. Will use libmagic to determine\\n    the file\\'s type and route it to the appropriate partitioning function. Applies the default\\n    parameters for each partitioning function. Use the document-type specific partitioning\\n    functions if you need access to additional kwarg options.',  'parameters': {'required': [{'name': 'None', 'description': 'A string defining the target filename path.'},    {'name': 'None', 'description': 'A string defining the file content in MIME type'},    {'name': 'None', 'description': 'A file-like object using \"rb\" mode --> open(filename, \"rb\").'}],   'optional': [{'name': 'None', 'description': 'When file is not None, the filename (string) to store in element metadata. E.g. \"foo.txt\"'},    {'name': 'None', 'description': 'The url for a remote document. Pass in content_type if you want partition to treat\\n        the document as a specific content_type.'},    {'name': 'False', 'description': 'If True, the output will include page breaks if the filetype supports it'},    {'name': 'PartitionStrategy.AUTO', 'description': 'The strategy to use for partitioning PDF/image. Uses a layout detection model if set\\n        to \\'hi_res\\', otherwise partition simply extracts the text from the document\\n        and processes it.'},    {'name': 'None', 'description': 'The encoding method used to decode the text input. If None, utf-8 will be used.'},    {'name': '{}', 'description': 'The headers to be used in conjunction with the HTTP request if URL is set.'},    {'name': '[\"pdf\", \"jpg\", \"png\", \"xls\", \"xlsx\", \"heic\"]', 'description': 'The document types that you want to skip table extraction with.'},    {'name': 'True', 'description': 'If the URL parameter is set, determines whether or not partition uses SSL verification\\n        in the HTTP request.'},    {'name': 'None', 'description': 'The languages present in the document, for use in partitioning and/or OCR. For partitioning\\n        image or pdf documents with Tesseract, you\\'ll first need to install the appropriate\\n        Tesseract language pack. For other partitions, language is detected using naive Bayesian\\n        filter via `langdetect`. Multiple languages indicates text could be in either language.\\n        Additional Parameters:\\n            detect_language_per_element\\n                Detect language per element instead of at the document level.'},    {'name': 'False', 'description': 'If True and strategy=hi_res, any Table Elements extracted from a PDF will include an\\n        additional metadata field, \"text_as_html,\" where the value (string) is a just a\\n        transformation of the data into an HTML <table>.\\n        The \"text\" field for a partitioned Table Element is always present, whether True or False.'},    {'name': 'False', 'description': 'Only applicable if `strategy=hi_res`.\\n        If True, any detected images will be saved in the path specified by\\n        \\'extract_image_block_output_dir\\' or stored as base64 encoded data within metadata fields.\\n        Deprecation Note: This parameter is marked for deprecation. Future versions will use\\n        \\'extract_image_block_types\\' for broader extraction capabilities.'},    {'name': 'None', 'description': 'Only applicable if `strategy=hi_res`.\\n        Images of the element type(s) specified in this list (e.g., [\"Image\", \"Table\"]) will be\\n        saved in the path specified by \\'extract_image_block_output_dir\\' or stored as base64\\n        encoded data within metadata fields.'},    {'name': 'False', 'description': 'Only applicable if `strategy=hi_res`.\\n        If True, images of the element type(s) defined in \\'extract_image_block_types\\' will be\\n        encoded as base64 data and stored in two metadata fields: \\'image_base64\\' and\\n        \\'image_mime_type\\'.\\n        This parameter facilitates the inclusion of element data directly within the payload,\\n        especially for web-based applications or APIs.'},    {'name': 'None', 'description': 'Only applicable if `strategy=hi_res` and `extract_image_block_to_payload=False`.\\n        The filesystem path for saving images of the element type(s)\\n        specified in \\'extract_image_block_types\\'.'},    {'name': 'False', 'description': 'If True, will retain the XML tags in the output. Otherwise it will simply extract\\n        the text from within the tags. Only applies to partition_xml.'},    {'name': 'None', 'description': 'The timeout for the HTTP request if URL is set. Defaults to None meaning no timeout and\\n        requests will block indefinitely.'},    {'name': 'None', 'description': 'The layout detection model used when partitioning strategy is set to `hi_res`.'},    {'name': 'None', 'description': 'The layout detection model used when partitioning strategy is set to `hi_res`. To be\\n        deprecated in favor of `hi_res_model_name`.'}]}}"